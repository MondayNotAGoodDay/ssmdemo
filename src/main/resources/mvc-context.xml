<?xml version="1.0" encoding="gbk"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

	<description>SpringMVC Configuration</description>


	<context:component-scan base-package="com.feng"/>


	<!-- 加载属性文件 ssm.properties -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:ssm.properties"/>


	<!--  开启注解驱动，这样可以使用@Controller这些注解  -->
	<mvc:annotation-driven validator="validator" conversion-service="dataConverterService">
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8"/>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>


	<!-- validator -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
		<!--<property name="validationMessageSource" ref="messageSource"/>-->
	</bean>

	<!--使用 Convert 接口-->
	<bean id="dataConverterService" class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<!-- 这里是用 <set> 还是用 <list> -->
			<set>
				<bean class="com.feng.common.converter.DateConverter"/>
			</set>
		</property>
	</bean>


	<!--&lt;!&ndash;使用 Formatter 接口&ndash;&gt;-->
	<!--<bean id="dataConverterService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">-->
	<!--<property name="formatters">-->
	<!--<set>-->
	<!--<bean class="com.wenshixin.convert.DateFormatter"/>-->
	<!--</set>-->
	<!--</property>-->
	<!--</bean>-->


	<!-- 拦截器 -->
	<!--<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/student/**"/>
			<bean class="TestInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>-->


	<!--<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">-->
	<!--<property name="basenames">-->
	<!--<list>-->
	<!--<value>validationMsg</value>-->
	<!--</list>-->
	<!--</property>-->
	<!--&lt;!&ndash; 资源文件编码格式 &ndash;&gt;-->
	<!--<property name="fileEncodings" value="utf-8" />-->
	<!--&lt;!&ndash; 对资源文件内容缓存时间，单位秒 &ndash;&gt;-->
	<!--<property name="cacheSeconds" value="120" />-->
	<!--</bean>-->


	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<!-- 会把"/**" url,注册到SimpleUrlHandlerMapping的urlMap中,把对静态资源的访问由HandlerMapping转到org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler处理并返回.
	DefaultServletHttpRequestHandler使用就是各个Servlet容器自己的默认Servlet.-->
	<mvc:default-servlet-handler/>


	<!-- 默认首页，view直接映射 -->
	<!--<mvc:view-controller path="/" view-name="index.jsp"/>-->


	<!--  配置视图解析器  -->
	<!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		  p:prefix="/WEB-INF/views/"
		  p:suffix=".jsp"
	/>

	<!-- 若用StandServeltMultipartResolver, -->
	<!--
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="maxUploadSize" value="2097152"/>
		<property name="maxInMemorySize" value="4194304"/>
	</bean>
	-->
</beans>